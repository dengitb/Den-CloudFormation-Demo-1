#DENIS2
---
AWSTemplateFormatVersion: 2010-09-09
Description: Cloudformation template to create EC2 instance
Parameters:
  InstanceType:
    Description: WebServer EC2 instance type
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: /jjtech/ec2/instancetype
    ConstraintDescription: must be a valid EC2 instance type.
  AMIID:
    Description: The EC2 AMI id
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
    ConstraintDescription: Must be a valid AMI based on the region
  VolumeSize:
    Description: EBS Volume size
    Type: Number
    Default: 8
    MinValue: 8
    MaxValue: 100
    ConstraintDescription: must be a number between 8 to 100 Gb
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  SecurityGroupPorts:
    Description: 'Simple Description of a Number Parameter, with MinValue and MaxValue'
    Type: Number
    AllowedValues:
      - 80
      - 443
      - 22
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
Resources:
  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId:
        Ref: AMIID
      InstanceType:
        Ref: InstanceType
      SubnetId: !ImportValue PublicSubnet1Id
      SecurityGroupIds:
        - !GetAtt InstanceSecurityGroup.GroupId
      IamInstanceProfile: !Ref MyIamInstanceProfile
      KeyName:
        Ref: KeyName
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp2
            DeleteOnTermination: true
            VolumeSize: !Ref VolumeSize
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH access via port 22
      VpcId: !ImportValue VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref SecurityGroupPorts
          ToPort: !Ref SecurityGroupPorts
          CidrIp:
            Ref: SSHLocation
    DependsOn: MyIamInstanceProfile
  MyEC2InstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: MyEC2InstanceRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: S3ReadOnlyAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 's3:Get*'
                Resource: !GetAtt S3Bucket.Arn
              - Effect: Allow
                Action:
                  - 's3:List*'
                Resource: !GetAtt S3Bucket.Arn
    DependsOn: S3Bucket
  MyIamInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      InstanceProfileName: MyIamInstanceProfile
      Path: /
      Roles:
        - Ref: MyEC2InstanceRole
  S3Bucket:
    Type: 'AWS::S3::Bucket'

    